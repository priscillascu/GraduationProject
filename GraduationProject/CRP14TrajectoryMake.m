%本程序规划机械臂笛卡尔空间轨迹，使其末端绘制边长0.2m的正方形
clear all

t = 0:0.1:39.9;   %共400个采样点
T1 = myFKSolver([0; 0; 0; 0; 0; 0]);   %起点位姿矩阵
T2 = [T1(1:4, 1:3), [0.9331; 0.0404; 0.8982; 1]];   %终点位姿矩阵
T3 = [T1(1:4, 1:3), [0.9331; 0.2404; 0.8982; 1]];
T4 = [T1(1:4, 1:3), [0.9331; 0.2404; 1.0982; 1]];
Ts1 = ctraj(T1, T2, length(t)/4);   %第一段笛卡尔轨迹规划，规划点有length(t)个
Ts2 = ctraj(T2, T3, length(t)/4);   %第二段笛卡尔轨迹规划，规划点有length(t)个
Ts3 = ctraj(T3, T4, length(t)/4);   %第三段笛卡尔轨迹规划，规划点有length(t)个
Ts4 = ctraj(T4, T1, length(t)/4);   %第四段笛卡尔轨迹规划，规划点有length(t)个
Ts = cat(3, Ts1, Ts2, Ts3, Ts4);
qc = [];
qb = [0; 0; 0; 0; 0; 0];  %初始角度
for i = 1 : length(t)
    qc(:, i) = myIKSolver(qb, Ts(:, :, i));   %求出每个位姿的逆运动学解
    qb = qc(:, i);  %修改每次迭代的初始角度，使其更加接近实际角度
    i
end
%加上时间序列，方便输入到simulink
q1 = [t', qc(1, :)'];
q2 = [t', qc(2, :)'];
q3 = [t', qc(3, :)'];
q4 = [t', qc(4, :)'];
q5 = [t', qc(5, :)'];
q6 = [t', qc(6, :)'];


    