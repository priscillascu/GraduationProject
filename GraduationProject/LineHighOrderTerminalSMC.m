function [sys,x0,str,ts] = LineHighOrderTerminalSMC(t, x, u, flag)
switch flag,
  case 0,
    [sys,x0,str,ts]=mdlInitializeSizes;  % 调用初始化子函数
  case 1,
    sys=[];
  case 2,
    sys=[];
  case 3,
    sys=mdlOutputs(t,x,u);    %计算输出子函数
  case 4,
    sys=[];   %计算下一仿真时刻子函数
  case 9,
    sys=[];    %终止仿真子函数
  otherwise
    DAStudio.error('Simulink:blocks:unhandledFlag', num2str(flag));

end

function [sys,x0,str,ts,simStateCompliance]=mdlInitializeSizes   %初始化子函数

sizes = simsizes;

sizes.NumContStates  = 0;  %连续状态变量个数
sizes.NumDiscStates  = 0;  %离散状态变量个数
sizes.NumOutputs     = 12;  %输出变量个数
sizes.NumInputs      = 12;   %输入变量个数
sizes.DirFeedthrough = 1;   %输入信号是否在输出子函数中出现
sizes.NumSampleTimes = 0;   % at least one sample time is needed

sys = simsizes(sizes);
x0  = [];   %初始值
str = [];   
ts  = [];   %[0 0]用于连续系统，[-1 0]表示继承其前的采样时间设置
simStateCompliance = 'UnknownSimState';

function sys=mdlOutputs(t,x,u)   %计算输出子函数
%%给定
%角度给定
R1 = (0.2693)*sin((0.2519)*t + (-0.2811)) + (0.08634)*sin((0.5401)*t + (2.424)) + (0.008846)*sin((1.175)*t + (1.882)) + (0.004509)*sin((1.749)*t + (1.906)) + (0.001863)*sin((2.389)*t + (2.173)) + (0.001096)*sin((3.001)*t + (2.104)) + (0.0006325)*sin((3.686)*t + (1.908));
R2 = (0.3132)*sin((0.2725)*t + (2.859)) + (0.0973)*sin((0.5103)*t + (-0.6751)) + (0.01545)*sin((1.175)*t + (-1.24)) + (0.006022)*sin((1.72)*t + (-1.014)) + (0.002018)*sin((2.423)*t + (-1.143)) + (0.001371)*sin((3.004)*t + (-1.004)) + (0.0007587)*sin((3.689)*t + (-1.204));
R3 = (0.5944)*sin((0.25)*t + (-0.0491)) + (0.2337)*sin((0.4144)*t + (3.144)) + (0.01604)*sin((1.171)*t + (1.843)) + (0.00728)*sin((1.754)*t + (1.81)) + (0.002588)*sin((2.357)*t + (2.304)) + (0.001568)*sin((2.978)*t + (2.203)) + (0.0008342)*sin((3.678)*t + (1.939));
R4 = (1.095)*sin((0.284)*t + (-0.299)) + (0.3042)*sin((0.5665)*t + (1.304)) + (0.06447)*sin((1.358)*t + (0.999)) + (0.05748)*sin((1.452)*t + (3.85)) + (0.005996)*sin((2.295)*t + (3.25)) + (0.00376)*sin((3.028)*t + (2.512)) + (0.002784)*sin((3.687)*t + (2.177));
R5 = (0.3831)*sin((0.2474)*t + (2.992)) + (0.1344)*sin((0.4627)*t + (-0.2944)) + (0.00835)*sin((1.175)*t + (-1.363)) + (0.004525)*sin((1.748)*t + (-1.374)) + (0.001669)*sin((2.401)*t + (-1.041)) + (0.001098)*sin((3.006)*t + (-1.08)) + (0.0006398)*sin((3.691)*t + (-1.248));
R6 = (1.056)*sin((0.2844)*t + (2.851)) + (0.2907)*sin((0.5716)*t + (-1.896)) + (0.1078)*sin((1.35)*t + (-2.024)) + (0.09987)*sin((1.404)*t + (0.9588)) + (0.005609)*sin((2.314)*t + (0.03832)) + (0.003715)*sin((3.008)*t + (-0.5013)) + (0.002569)*sin((3.694)*t + (-0.9631));
R = [R1; R2; R3; R4; R5; R6];
%位置给定的导数，即速度
dR1 =  (0.2693)*(0.2519)*cos((0.2519)*t + (-0.2811)) + (0.08634)*(0.5401)*cos((0.5401)*t + (2.424)) + (0.008846)*(1.175)*cos((1.175)*t + (1.882)) + (0.004509)*(1.749)*cos((1.749)*t + (1.906)) + (0.001863)*(2.389)*cos((2.389)*t + (2.173)) + (0.001096)*(3.001)*cos((3.001)*t + (2.104)) + (0.0006325)*(3.686)*cos((3.686)*t + (1.908));
dR2 = (0.3132)*(0.2725)*cos((0.2725)*t + (2.859)) + (0.0973)*(0.5103)*cos((0.5103)*t + (-0.6751)) + (0.01545)*(1.175)*cos((1.175)*t + (-1.24)) + (0.006022)*(1.72)*cos((1.72)*t + (-1.014)) + (0.002018)*(2.423)*cos((2.423)*t + (-1.143)) + (0.001371)*(3.004)*cos((3.004)*t + (-1.004)) + (0.0007587)*(3.689)*cos((3.689)*t + (-1.204));
dR3 = (0.5944)*(0.25)*cos((0.25)*t + (-0.0491)) + (0.2337)*(0.4144)*cos((0.4144)*t + (3.144)) + (0.01604)*(1.171)*cos((1.171)*t + (1.843)) + (0.00728)*(1.754)*cos((1.754)*t + (1.81)) + (0.002588)*(2.357)*cos((2.357)*t + (2.304)) + (0.001568)*(2.978)*cos((2.978)*t + (2.203)) + (0.0008342)*(3.678)*cos((3.678)*t + (1.939));
dR4 = (1.095)*(0.284)*cos((0.284)*t + (-0.299)) + (0.3042)*(0.5665)*cos((0.5665)*t + (1.304)) + (0.06447)*(1.358)*cos((1.358)*t + (0.999)) + (0.05748)*(1.452)*cos((1.452)*t + (3.85)) + (0.005996)*(2.295)*cos((2.295)*t + (3.25)) + (0.00376)*(3.028)*cos((3.028)*t + (2.512)) + (0.002784)*(3.687)*cos((3.687)*t + (2.177));
dR5 = (0.3831)*(0.2474)*cos((0.2474)*t + (2.992)) + (0.1344)*(0.4627)*cos((0.4627)*t + (-0.2944)) + (0.00835)*(1.175)*cos((1.175)*t + (-1.363)) + (0.004525)*(1.748)*cos((1.748)*t + (-1.374)) + (0.001669)*(2.401)*cos((2.401)*t + (-1.041)) + (0.001098)*(3.006)*cos((3.006)*t + (-1.08)) + (0.0006398)*(3.691)*cos((3.691)*t + (-1.248));
dR6 = (1.056)*(0.2844)*cos((0.2844)*t + (2.851)) + (0.2907)*(0.5716)*cos((0.5716)*t + (-1.896)) + (0.1078)*(1.35)*cos((1.35)*t + (-2.024)) + (0.09987)*(1.404)*cos((1.404)*t + (0.9588)) + (0.005609)*(2.314)*cos((2.314)*t + (0.03832)) + (0.003715)*(3.008)*cos((3.008)*t + (-0.5013)) + (0.002569)*(3.694)*cos((3.694)*t + (-0.9631));
dR = [dR1; dR2; dR3; dR4; dR5; dR6];
%位置给定的二阶导数，即加速度
ddR1 = -(0.2693)*(0.2519)^2*sin((0.2519)*t + (-0.2811)) + -(0.08634)*(0.5401)^2*sin((0.5401)*t + (2.424)) + -(0.008846)*(1.175)^2*sin((1.175)*t + (1.882)) + -(0.004509)*(1.749)^2*sin((1.749)*t + (1.906)) + -(0.001863)*(2.389)^2*sin((2.389)*t + (2.173)) + -(0.001096)*(3.001)^2*sin((3.001)*t + (2.104)) + -(0.0006325)*(3.686)^2*sin((3.686)*t + (1.908));
ddR2 =  -(0.3132)*(0.2725)^2*sin((0.2725)*t + (2.859)) + -(0.0973)*(0.5103)^2*sin((0.5103)*t + (-0.6751)) + -(0.01545)*(1.175)^2*sin((1.175)*t + (-1.24)) + -(0.006022)*(1.72)^2*sin((1.72)*t + (-1.014)) + -(0.002018)*(2.423)^2*sin((2.423)*t + (-1.143)) + -(0.001371)*(3.004)^2*sin((3.004)*t + (-1.004)) + -(0.0007587)*(3.689)^2*sin((3.689)*t + (-1.204));
ddR3 =  -(0.5944)*(0.25)^2*sin((0.25)*t + (-0.0491)) + -(0.2337)*(0.4144)^2*sin((0.4144)*t + (3.144)) + -(0.01604)*(1.171)^2*sin((1.171)*t + (1.843)) + -(0.00728)*(1.754)^2*sin((1.754)*t + (1.81)) + -(0.002588)*(2.357)^2*sin((2.357)*t + (2.304)) + -(0.001568)*(2.978)^2*sin((2.978)*t + (2.203)) + -(0.0008342)*(3.678)^2*sin((3.678)*t + (1.939));
ddR4 =  -(1.095)*(0.284)^2*sin((0.284)*t + (-0.299)) + -(0.3042)*(0.5665)^2*sin((0.5665)*t + (1.304)) + -(0.06447)*(1.358)^2*sin((1.358)*t + (0.999)) + -(0.05748)*(1.452)^2*sin((1.452)*t + (3.85)) + -(0.005996)*(2.295)^2*sin((2.295)*t + (3.25)) + -(0.00376)*(3.028)^2*sin((3.028)*t + (2.512)) + -(0.002784)*(3.687)^2*sin((3.687)*t + (2.177));
ddR5 =  -(0.3831)*(0.2474)^2*sin((0.2474)*t + (2.992)) + -(0.1344)*(0.4627)^2*sin((0.4627)*t + (-0.2944)) + -(0.00835)*(1.175)^2*sin((1.175)*t + (-1.363)) + -(0.004525)*(1.748)^2*sin((1.748)*t + (-1.374)) + -(0.001669)*(2.401)^2*sin((2.401)*t + (-1.041)) + -(0.001098)*(3.006)^2*sin((3.006)*t + (-1.08)) + -(0.0006398)*(3.691)^2*sin((3.691)*t + (-1.248));
ddR6 = -(1.056)*(0.2844)^2*sin((0.2844)*t + (2.851)) + -(0.2907)*(0.5716)^2*sin((0.5716)*t + (-1.896)) + -(0.1078)*(1.35)^2*sin((1.35)*t + (-2.024)) + -(0.09987)*(1.404)^2*sin((1.404)*t + (0.9588)) + -(0.005609)*(2.314)^2*sin((2.314)*t + (0.03832)) + -(0.003715)*(3.008)^2*sin((3.008)*t + (-0.5013)) + -(0.002569)*(3.694)^2*sin((3.694)*t + (-0.9631));
ddR = [ddR1; ddR2; ddR3; ddR4; ddR5; ddR6];
%%
%角度输入
th(1) = u(1);
th(2) = u(3);
th(3) = u(5);
th(4) = u(7);
th(5) = u(9);
th(6) = u(11);
%角速度输入
dth(1) = u(2);
dth(2) = u(4);
dth(3) = u(6);
dth(4) = u(8);
dth(5) = u(10);
dth(6) = u(12);
%%
%角度误差
e1 = th(1) - R1;
e2 = th(2) - R2;
e3 = th(3) - R3;
e4 = th(4) - R4;
e5 = th(5) - R5;
e6 = th(6) - R6;
e = [e1; e2; e3; e4; e5; e6];
%角速度误差
de1 = dth(1) -dR1;
de2 = dth(2) -dR2;
de3 = dth(3) -dR3;
de4 = dth(4) -dR4;
de5 = dth(5) -dR5;
de6 = dth(6) -dR6;
de = [de1; de2; de3; de4; de5; de6];

%%
%----定义旋转矩阵A并取绕Z轴旋转分量----
%部分DH参数
alpha_i_1 = [0, -pi/2, 0, -pi/2, pi/2, -pi/2];
theta = [th(1), th(2), th(3)-pi/2, th(4), th(5), th(6)];

A0i = 1;  %循环叠加求第i个连杆相对与0坐标系的旋转矩阵
e3 = [0; 0; 1];  %取Z轴分量
for j = 1 : 6
    A0i = A0i * [cos(theta(j)) -sin(theta(j)) 0;
                        cos(alpha_i_1(j))*sin(theta(j)) cos(alpha_i_1(j))*cos(theta(j)) -sin(alpha_i_1(j));
                        sin(alpha_i_1(j))*sin(theta(j)) sin(alpha_i_1(j))*cos(theta(j)) cos(alpha_i_1(j))];
    A0{j} = A0i;
end

m = [17.9513, 3.5484, 7.3201, 3.8682, 0.7287, 1]; %六个连杆的质量
%细胞数组J为各个连杆的转动惯量
J{1} = [ 0.5354           0.0131           -0.2059;
            0.0131           0.7118        0.0404;
            -0.2059           0.0404           0.5010];
        
J{2} = [0.5044, -0.0164, -0.0021;
    -0.0164, 0.0144, -0.0304;
    -0.0021, -0.0304, 0.5091];
        
J{3} = [0.2601, -0.1844, -0.0883;
    -0.1844, 0.2780, -0.0850;
    -0.0883, -0.0850, 0.3979];
        
J{4} = [0.1544, -0.0001, -0.0143;
    -0.0001, 0.1527, -0.0051;
    -0.0143, -0.0051, 0.0224];
        
J{5} = [0.0055, 0, 0;
    0, 0.0040, -0.0015;
    0, -0.0015, 0.0028];
        
J{6} = [0.0042, 0, 0;
    0, 0.0042, 0;
    0, 0, 0.0017];
%创建W矩阵
W{1} = [e3'*A0{1}'; 
            0 0 0;
            0 0 0;
            0 0 0;
            0 0 0;
            0 0 0];
        
W{2} = [e3'*A0{1}'; 
            e3'*A0{2}';
            0 0 0;
            0 0 0;
            0 0 0;
            0 0 0];
  
W{3} = [e3'*A0{1}'; 
            e3'*A0{2}';
            e3'*A0{3}';
            0 0 0;
            0 0 0;
            0 0 0];
        
W{4} = [e3'*A0{1}'; 
            e3'*A0{2}';
            e3'*A0{3}';
            e3'*A0{4}';
            0 0 0;
            0 0 0];
        
W{5} = [e3'*A0{1}'; 
            e3'*A0{2}';
            e3'*A0{3}';
            e3'*A0{4}';
            e3'*A0{5}';
            0 0 0];
        
W{6} = [e3'*A0{1}'; 
            e3'*A0{2}';
            e3'*A0{3}';
            e3'*A0{4}';
            e3'*A0{5}';
            e3'*A0{6}'];
        
WT{1} = W{1}';
WT{2} = W{2}';
WT{3} = W{3}';
WT{4} = W{4}';
WT{5} = W{5}';
WT{6} = W{6}';

%创建V矩阵，需要用到连杆长度q质心位置r
q{1} = [0; 0; 0];
q{2} = [0.1949; -0.0951; 0.2850];
q{3} = [1.0938e-04; -0.6137; 0.0030];
q{4} = [0.2000; 0.2750; 0.1105];
q{5} = [0; 0.0320; 0.3650];
q{6} = [-4.7162e-04; 0.0981; 0.0540];

r{1} = [0.0467; -0.0104; 0.1100];
r{2} = [-0.0155; -0.2895; -0.0268];
r{3} = [0.1366; 0.1311; 0.0806];
r{4} = [0.0350; 0.0044; 0.1474];
r{5} = [3.9663e-06; -0.0019; 0.0540];
r{6} = [0; 0; 0.05];

%求叉乘矩阵前，先求积，再转为叉乘矩阵
%A0q的叉乘矩阵
tmp1 = A0{1}*q{2};
tmp2 = A0{2}*q{3};
tmp3 = A0{3}*q{4};
tmp4 = A0{4}*q{5};
tmp5 = A0{5}*q{6};
A01q2x = [0, -tmp1(3), tmp1(2);
                  tmp1(3), 0, -tmp1(1);
                  -tmp1(2), tmp1(1), 0];
              
A02q3x = [0, -tmp2(3), tmp2(2);
                  tmp2(3), 0, -tmp2(1);
                  -tmp2(2), tmp2(1), 0];
              
A03q4x = [0, -tmp3(3), tmp3(2);
                  tmp3(3), 0, -tmp3(1);
                  -tmp3(2), tmp3(1), 0];
              
A04q5x = [0, -tmp4(3), tmp4(2);
                  tmp4(3), 0, -tmp4(1);
                  -tmp4(2), tmp4(1), 0];
              
A05q6x = [0, -tmp5(3), tmp5(2);
                  tmp5(3), 0, -tmp5(1);
                  -tmp5(2), tmp5(1), 0];

%A0r的叉乘矩阵
tmp1 = A0{1}*r{1};
tmp2 = A0{2}*r{2};
tmp3 = A0{3}*r{3};
tmp4 = A0{4}*r{4};
tmp5 = A0{5}*r{5};
tmp6 = A0{6}*r{6};
A01r1x = [0, -tmp1(3), tmp1(2);
                  tmp1(3), 0, -tmp1(1);
                  -tmp1(2), tmp1(1), 0];
              
A02r2x = [0, -tmp2(3), tmp2(2);
                  tmp2(3), 0, -tmp2(1);
                  -tmp2(2), tmp2(1), 0];
              
A03r3x = [0, -tmp3(3), tmp3(2);
                  tmp3(3), 0, -tmp3(1);
                  -tmp3(2), tmp3(1), 0];
              
A04r4x = [0, -tmp4(3), tmp4(2);
                  tmp4(3), 0, -tmp4(1);
                  -tmp4(2), tmp4(1), 0];
              
A05r5x = [0, -tmp5(3), tmp5(2);
                  tmp5(3), 0, -tmp5(1);
                  -tmp5(2), tmp5(1), 0];
              
A06r6x = [0, -tmp6(3), tmp6(2);
                  tmp6(3), 0, -tmp6(1);
                  -tmp6(2), tmp6(1), 0];
              
%创建ViT矩阵
VT{1} = -[A01r1x , [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0]];
VT{2} = -[A01q2x , A02r2x, [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0]];
VT{3} = -[A01q2x , A02q3x, A03r3x, [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0]];
VT{4} = -[A01q2x , A02q3x, A03q4x, A04r4x, [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0]];
VT{5} = -[A01q2x , A02q3x, A03q4x, A04q5x, A05r5x, [0, 0, 0; 0, 0, 0; 0, 0, 0]];
VT{6} = -[A01q2x , A02q3x, A03q4x, A04q5x, A05q6x, A06r6x];

%A0e3的叉乘矩阵
tmp1 = A0{1}*e3;
tmp2 = A0{2}*e3;
tmp3 = A0{3}*e3;
tmp4 = A0{4}*e3;
tmp5 = A0{5}*e3;
tmp6 = A0{6}*e3;
A01e3x = [0, -tmp1(3), tmp1(2);
                  tmp1(3), 0, -tmp1(1);
                  -tmp1(2), tmp1(1), 0];
              
A02e3x = [0, -tmp2(3), tmp2(2);
                  tmp2(3), 0, -tmp2(1);
                  -tmp2(2), tmp2(1), 0];
              
A03e3x = [0, -tmp3(3), tmp3(2);
                  tmp3(3), 0, -tmp3(1);
                  -tmp3(2), tmp3(1), 0];
              
A04e3x = [0, -tmp4(3), tmp4(2);
                  tmp4(3), 0, -tmp4(1);
                  -tmp4(2), tmp4(1), 0];
              
A05e3x = [0, -tmp5(3), tmp5(2);
                  tmp5(3), 0, -tmp5(1);
                  -tmp5(2), tmp5(1), 0];
              
A06e3x = [0, -tmp6(3), tmp6(2);
                  tmp6(3), 0, -tmp6(1);
                  -tmp6(2), tmp6(1), 0];

%创建W的导数矩阵dW
dW{1} = [dth*W{1}*A01e3x 
            0 0 0;
            0 0 0;
            0 0 0;
            0 0 0;
            0 0 0];
        
dW{2} = [dth*W{1}*A01e3x; 
            dth*W{2}*A02e3x;
            0 0 0;
            0 0 0;
            0 0 0;
            0 0 0];
        
dW{3} = [dth*W{1}*A01e3x; 
            dth*W{2}*A02e3x;
            dth*W{3}*A03e3x;
            0 0 0;
            0 0 0;
            0 0 0];
        
dW{4} = [dth*W{1}*A01e3x; 
            dth*W{2}*A02e3x;
            dth*W{3}*A03e3x;
            dth*W{4}*A04e3x;
            0 0 0;
            0 0 0];
        
dW{5} = [dth*W{1}*A01e3x; 
            dth*W{2}*A02e3x;
            dth*W{3}*A03e3x;
            dth*W{4}*A04e3x;
            dth*W{5}*A05e3x;
            0 0 0];
        
dW{6} = [dth*W{1}*A01e3x; 
            dth*W{2}*A02e3x;
            dth*W{3}*A03e3x;
            dth*W{4}*A04e3x;
            dth*W{5}*A05e3x;
            dth*W{6}*A06e3x];
        
dWT{1} = dW{1}';
dWT{2} = dW{2}';
dWT{3} = dW{3}';
dWT{4} = dW{4}';
dWT{5} = dW{5}';
dWT{6} = dW{6}';

%omega_i的叉乘矩阵
tmp1 = [0, 0, dth(1)];
tmp2 = [0, 0, dth(2)];
tmp3 = [0, 0, dth(3)];
tmp4 = [0, 0, dth(4)];
tmp5 = [0, 0, dth(5)];
tmp6 = [0, 0, dth(6)];
omega1x = [0, -tmp1(3), tmp1(2);
                  tmp1(3), 0, -tmp1(1);
                  -tmp1(2), tmp1(1), 0];
              
omega2x = [0, -tmp2(3), tmp2(2);
                  tmp2(3), 0, -tmp2(1);
                  -tmp2(2), tmp2(1), 0];
              
omega3x = [0, -tmp3(3), tmp3(2);
                  tmp3(3), 0, -tmp3(1);
                  -tmp3(2), tmp3(1), 0];
              
omega4x = [0, -tmp4(3), tmp4(2);
                  tmp4(3), 0, -tmp4(1);
                  -tmp4(2), tmp4(1), 0];
              
omega5x = [0, -tmp5(3), tmp5(2);
                  tmp5(3), 0, -tmp5(1);
                  -tmp5(2), tmp5(1), 0];
              
omega6x = [0, -tmp6(3), tmp6(2);
                  tmp6(3), 0, -tmp6(1);
                  -tmp6(2), tmp6(1), 0];
              
%omega_ixA0i-1qi的叉乘矩阵
tmp1 = omega1x*A0{1}*q{2};
tmp2 = omega2x*A0{2}*q{3};
tmp3 = omega3x*A0{3}*q{4};
tmp4 = omega4x*A0{4}*q{5};
tmp5 = omega5x*A0{5}*q{6};
omega1xA01q2x = [0, -tmp1(3), tmp1(2);
                  tmp1(3), 0, -tmp1(1);
                  -tmp1(2), tmp1(1), 0];
              
omega2xA02q3x = [0, -tmp2(3), tmp2(2);
                  tmp2(3), 0, -tmp2(1);
                  -tmp2(2), tmp2(1), 0];
              
omega3xA03q4x = [0, -tmp3(3), tmp3(2);
                  tmp3(3), 0, -tmp3(1);
                  -tmp3(2), tmp3(1), 0];
              
omega4xA04q5x = [0, -tmp4(3), tmp4(2);
                  tmp4(3), 0, -tmp4(1);
                  -tmp4(2), tmp4(1), 0];
              
omega5xA05q6x = [0, -tmp5(3), tmp5(2);
                  tmp5(3), 0, -tmp5(1);
                  -tmp5(2), tmp5(1), 0];       
              
%omega_ixA0iri的叉乘矩阵
tmp1 = omega1x*A0{1}*r{1};
tmp2 = omega2x*A0{2}*r{2};
tmp3 = omega3x*A0{3}*r{3};
tmp4 = omega4x*A0{4}*r{4};
tmp5 = omega5x*A0{5}*r{5};
tmp6 = omega6x*A0{6}*r{6};
omega1xA01r1x = [0, -tmp1(3), tmp1(2);
                  tmp1(3), 0, -tmp1(1);
                  -tmp1(2), tmp1(1), 0];
              
omega2xA02r2x = [0, -tmp2(3), tmp2(2);
                  tmp2(3), 0, -tmp2(1);
                  -tmp2(2), tmp2(1), 0];
              
omega3xA03r3x = [0, -tmp3(3), tmp3(2);
                  tmp3(3), 0, -tmp3(1);
                  -tmp3(2), tmp3(1), 0];
              
omega4xA04r4x = [0, -tmp4(3), tmp4(2);
                  tmp4(3), 0, -tmp4(1);
                  -tmp4(2), tmp4(1), 0];
              
omega5xA05r5x = [0, -tmp5(3), tmp5(2);
                  tmp5(3), 0, -tmp5(1);
                  -tmp5(2), tmp5(1), 0];
              
omega6xA06r6x = [0, -tmp6(3), tmp6(2);
                  tmp6(3), 0, -tmp6(1);
                  -tmp6(2), tmp6(1), 0];     
              
%创建dViT矩阵
dVT{1} = -[omega1xA01r1x , [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0]];
dVT{2} = -[omega1xA01q2x , omega2xA02r2x, [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0]];
dVT{3} = -[omega1xA01q2x , omega2xA02q3x, omega3xA03r3x, [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0]];
dVT{4} = -[omega1xA01q2x , omega2xA02q3x, omega3xA03q4x, omega4xA04r4x, [0, 0, 0; 0, 0, 0; 0, 0, 0], [0, 0, 0; 0, 0, 0; 0, 0, 0]];
dVT{5} = -[omega1xA01q2x , omega2xA02q3x, omega3xA03q4x, omega4xA04q5x, omega5xA05r5x, [0, 0, 0; 0, 0, 0; 0, 0, 0]];
dVT{6} = -[omega1xA01q2x , omega2xA02q3x, omega3xA03q4x, omega4xA04q5x, omega5xA05q6x, omega6xA06r6x];

%WkTdth的叉乘矩阵
tmp1 = WT{1}*dth';
tmp2 = WT{2}*dth';
tmp3 = WT{3}*dth';
tmp4 = WT{4}*dth';
tmp5 = WT{5}*dth';
tmp6 = WT{6}*dth';
WTdth{1} = [0, -tmp1(3), tmp1(2);
                  tmp1(3), 0, -tmp1(1);
                  -tmp1(2), tmp1(1), 0];
              
WTdth{2} = [0, -tmp2(3), tmp2(2);
                  tmp2(3), 0, -tmp2(1);
                  -tmp2(2), tmp2(1), 0];
              
WTdth{3} = [0, -tmp3(3), tmp3(2);
                  tmp3(3), 0, -tmp3(1);
                  -tmp3(2), tmp3(1), 0];
              
WTdth{4} = [0, -tmp4(3), tmp4(2);
                  tmp4(3), 0, -tmp4(1);
                  -tmp4(2), tmp4(1), 0];
              
WTdth{5} = [0, -tmp5(3), tmp5(2);
                  tmp5(3), 0, -tmp5(1);
                  -tmp5(2), tmp5(1), 0];
              
WTdth{6} = [0, -tmp6(3), tmp6(2);
                  tmp6(3), 0, -tmp6(1);
                  -tmp6(2), tmp6(1), 0];     
%参数M
M = 0;
for i = 1 : 6
    M = M + m(i)*(cell2mat(W)*VT{i}'*VT{i}*cell2mat(WT')) + W{i}*J{i}*W{i}';
end

%参数N
N = 0;
for i = 1 : 6
    N = N + m(i)*(cell2mat(W)*VT{i}'*(dVT{i}*cell2mat(WT')+VT{i}*cell2mat(dWT')))+W{i}*J{i}*dWT{i}+W{i}*WTdth{i}*J{i}*WT{i};
end
%%
%Termianl滑模控制器
%0时刻的误差值e0
% e0 = [
%     0.0021;
%    -0.0002;
%     0.0004;
%    -0.0387;
%    -0.0022;
%     0.0426];
% de0 = [
%    -0.0043;
%     0.0012;
%    -0.0028;
%     0.0615;
%     0.0072;
%    -0.0719];
% dde0 = [
%     0.0042;
%     0.0025;
%    -0.0105;
%    -0.0405;
%     0.0036;
%     0.0473];
e0=[0; 0; 0; 0; 0; 0];
de0=[0; 0; 0; 0; 0; 0];
dde0=[0; 0; 0; 0; 0; 0];
%P算子中的系数a
T = 0.5;
a00 = -10;
a10 = 15;
a20 = -6;

a01 = -6;
a11 = 8;
a21 = -3;

a02 = -3/2;
a12 = 3/2;
a22 = -1/2;

if(t >= T)
    p = [0; 0; 0; 0; 0; 0];
    dp = [0; 0; 0; 0; 0; 0];
    ddp = [0; 0; 0; 0; 0; 0];
else   
    A1 = a00/(T^3)*e0 + a01/(T^2)*de0 + a02/T*dde0;  %t^3的系数项
    B1 = a10/(T^4)*e0 + a11/(T^3)*de0 + a12/(T^2)*dde0;  %t^4的系数项
    C1 = a20/(T^5)*e0 + a21/(T^4)*de0 + a22/(T^3)*dde0;  %t^5的系数项
    p = e0 + de0*t + 1/2*dde0*t^2 + A1*t^3 + B1*t^4 + C1*t^5;
    dp = de0 + dde0*t + 3*A1*t^2 + 4*B1*t^3 + 5*C1*t^4;
    ddp = dde0 + 6*A1*t + 12*B1*t^2 + 20*C1*t^3;
end

%目前看来系统会在T时刻误差收敛到0附近
%增大K和C1也可以减小跟踪误差
C1 = diag([80, 80, 80, 80, 80, 80], 0);
C2 = diag([1, 1, 1, 1, 1, 1], 0);
C = [C1, C2];
E = [e; de];
P = [p; dp];
s = C*E - C*P;
K = [14; 30; 50; 30; 55; 35];

tol = -M*(- ddR - ddp + inv(C2)*C1*(de - dp) + K.*tanh(C2*s/0.1)) + N*dth';

sys(1) = tol(1);
sys(2) = tol(2);
sys(3) = tol(3);
sys(4) = tol(4);
sys(5) = tol(5);
sys(6) = tol(6);
sys(7) = e(1);
sys(8) = e(2);
sys(9) = e(3);
sys(10) = e(4);
sys(11) = e(5);
sys(12) = e(6);